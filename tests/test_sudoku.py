import unittest
from src.sudoku import Sudoku

class TestSudoku(unittest.TestCase):
    def setUp(self):
        self.solver = Sudoku()

    def test_valid_solution(self):
        board = [
            ["5","3",".",".","7",".",".",".","."],
            ["6",".",".","1","9","5",".",".","."],
            [".","9","8",".",".",".",".","6","."],
            ["8",".",".",".","6",".",".",".","3"],
            ["4",".",".","8",".","3",".",".","1"],
            ["7",".",".",".","2",".",".",".","6"],
            [".","6",".",".",".",".","2","8","."],
            [".",".",".","4","1","9",".",".","5"],
            [".",".",".",".","8",".",".","7","9"]
        ]
        solution = [
            ["5","3","4","6","7","8","9","1","2"],
            ["6","7","2","1","9","5","3","4","8"],
            ["1","9","8","3","4","2","5","6","7"],
            ["8","5","9","7","6","1","4","2","3"],
            ["4","2","6","8","5","3","7","9","1"],
            ["7","1","3","9","2","4","8","5","6"],
            ["9","6","1","5","3","7","2","8","4"],
            ["2","8","7","4","1","9","6","3","5"],
            ["3","4","5","2","8","6","1","7","9"]
        ]
        self.assertEqual(self.solver.solve(board), solution)

    def test_invalid_board(self):
        board = [
            ["5","3",".",".","7",".",".",".","."],
            ["5",".",".","1","9","5",".",".","."],  # Duplicate 5 in first column
            [".","9","8",".",".",".",".","6","."]
        ]
        with self.assertRaises(ValueError):
            self.solver.solve(board)

    def test_empty_board(self):
        board = [["."] * 9 for _ in range(9)]
        solution = self.solver.solve(board)
        self.assertTrue(self.solver.is_valid_solution(solution))

    def test_is_valid_solution(self):
        board = [
            ["5","3","4","6","7","8","9","1","2"],
            ["6","7","2","1","9","5","3","4","8"],
            ["1","9","8","3","4","2","5","6","7"],
            ["8","5","9","7","6","1","4","2","3"],
            ["4","2","6","8","5","3","7","9","1"],
            ["7","1","3","9","2","4","8","5","6"],
            ["9","6","1","5","3","7","2","8","4"],
            ["2","8","7","4","1","9","6","3","5"],
            ["3","4","5","2","8","6","1","7","9"]
        ]
        self.assertTrue(self.solver.is_valid_solution(board))